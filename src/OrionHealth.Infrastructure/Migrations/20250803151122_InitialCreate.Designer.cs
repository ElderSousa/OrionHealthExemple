// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using OrionHealth.Infrastructure.Persistence.Context;

#nullable disable

namespace OrionHealth.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250803151122_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ORIONHEALTH")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrionHealth.Domain.Entities.ObservationResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ObservationDateTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("OBSERVATION_DATE_TIME");

                    b.Property<string>("ObservationId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("OBSERVATION_ID");

                    b.Property<string>("ObservationText")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("OBSERVATION_TEXT");

                    b.Property<string>("ObservationValue")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("OBSERVATION_VALUE");

                    b.Property<long>("PatientId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("PATIENT_ID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Units")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("UNITS");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("OBSERVATION_RESULTS", "ORIONHEALTH");
                });

            modelBuilder.Entity("OrionHealth.Domain.Entities.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATE_OF_BIRTH");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FULL_NAME");

                    b.Property<string>("MedicalRecordNumber")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("MEDICAL_RECORD_NUMBER");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordNumber")
                        .IsUnique();

                    b.ToTable("PATIENTS", "ORIONHEALTH");
                });

            modelBuilder.Entity("OrionHealth.Domain.Entities.ObservationResult", b =>
                {
                    b.HasOne("OrionHealth.Domain.Entities.Patient", null)
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
