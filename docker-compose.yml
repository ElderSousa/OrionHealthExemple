
services:

  # --- NOSSA APLICAÇÃO .NET ---
  orion-health-hub:
    # 'build: .' instrui o Docker a construir uma imagem usando o Dockerfile
    # que está nesta mesma pasta.
    build: .
    # 'depends_on' garante que o contêiner do banco de dados (oracle-db)
    # será iniciado ANTES do contêiner da nossa aplicação.
    ports:
      - "1080:1080"
      # ### ADICIONE ESTA SEÇÃO DE VOLUMES ###
    volumes:
      # Mapeia o arquivo do certificado da sua máquina para dentro do contêiner
      # O ':ro' no final significa "read-only" (apenas leitura), uma boa prática de segurança.
      - ./certs/orionhealth.pfx:/app/certs/orionhealth.pfx:ro
    depends_on:
      - oracle-db
    environment:
      # AQUI ESTÁ A MÁGICA DA CONEXÃO:
      # Passamos a ConnectionString como uma variável de ambiente para o contêiner.
      # Note que o 'Data Source' não é 'localhost', mas sim 'oracle-db',
      # que é o nome do serviço do banco de dados. Dentro da rede do Docker,
      # os contêineres se comunicam pelos nomes dos serviços.
      - ConnectionStrings__OracleConnection=User Id=orionhealth;Password=oracle;Data Source=oracle-db:1521/XEPDB1;

  # --- BANCO DE DADOS ORACLE ---
  oracle-db:
    image: gvenzl/oracle-xe:latest
    ports:
      - "1521:1521"
    environment:
      - ORACLE_PASSWORD=oracle
    volumes:
      - oracle_data:/opt/oracle/oradata

volumes:
  oracle_data: